<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.vvwork.auth.jdbc.system.RoleMapper">

    <!-- Result mapper for connection parameters -->
    <resultMap id="ParameterResultMap" type="com.vvwork.ext.net.auth.RoleModel">
        <result column="role_id"    property="identifier"          jdbcType="VARCHAR"/>
        <result column="role_name"  property="name"                 jdbcType="VARCHAR"/>
        <result column="role_description"  property="description"              jdbcType="VARCHAR"/>
        <result column="department_id"    property="departmentIdentifier"          jdbcType="VARCHAR"/>
        <result column="create_time"   property="time"                jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- Select all parameters of a given connection -->
     <select id="selectAll" resultMap="ParameterResultMap">
        SELECT
            role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role
    </select>
    
    
     <select id="selectOne" resultMap="ParameterResultMap">
        SELECT
            role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role
        WHERE
            role_id = #{identifier,jdbcType=VARCHAR}
    </select>
    
    <select id="getObjectByName" resultMap="ParameterResultMap">
        SELECT
            role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role
        WHERE
            role_name = #{name,jdbcType=VARCHAR}
    </select>
    <select id="getObjectByNameAndDepartment" resultMap="ParameterResultMap">
        SELECT
            role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role
        WHERE
            role_name = #{role.name,jdbcType=VARCHAR} 
        AND 
            department_id = #{role.departmentIdentifier,jdbcType=VARCHAR}     
    </select>
    <select id="getObjectsByDepartment" resultMap="ParameterResultMap">
        SELECT
            role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role
        WHERE
            department_id = #{identifier,jdbcType=VARCHAR}     
    </select>
    
    <select id="getChildRoles" resultMap="ParameterResultMap">
        SELECT
            tb_vvwork_role.role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role, tb_vvwork_role_relation
        WHERE
            tb_vvwork_role.role_id =  tb_vvwork_role_relation.role_id 
        AND 
            tb_vvwork_role_relation.parent_role_id = #{identifier,jdbcType=VARCHAR}   
    </select>
    
    <select id="getUserRolesByUsername" resultMap="ParameterResultMap">
        SELECT
			tb_vvwork_role.role_id,
			tb_vvwork_role.role_name,
			tb_vvwork_role.role_description,
			tb_vvwork_role.department_id,
			tb_vvwork_role.create_time
		FROM
			vvwork_user ,
			tb_vvwork_user_role ,
			tb_vvwork_role
		WHERE
			vvwork_user.user_id =  tb_vvwork_user_role.user_id 
		AND
			tb_vvwork_role.role_id =  tb_vvwork_user_role.role_id 
		AND 
			vvwork_user.username =  #{identifier,jdbcType=VARCHAR}   
    </select>
    
    <select id="selectChildRoles" resultMap="ParameterResultMap">
        SELECT
            role_id,
            role_name,
            role_description,
            department_id,
            create_time
        FROM tb_vvwork_role
        WHERE
            role_id IN 
            <foreach collection="identifiers" item="identifier"
                     open="(" separator="," close=")">
                #{identifier,jdbcType=VARCHAR}
            </foreach>

    </select>
    
    <select id="getParentRole" resultMap="ParameterResultMap">
	    SELECT
	            tb_vvwork_role.role_id,
	            role_name,
	            role_description,
	            department_id,
	            create_time
	        FROM tb_vvwork_role,
				tb_vvwork_role_relation
			WHERE
				tb_vvwork_role.role_id =  tb_vvwork_role_relation.parent_role_id
		    AND
				tb_vvwork_role_relation.role_id = #{identifier,jdbcType=VARCHAR}
    </select>
    <update id="update" parameterType="com.vvwork.ext.net.auth.RoleModel">
        UPDATE tb_vvwork_role
        SET 
           role_name = #{role.name,jdbcType=VARCHAR},
           role_description = #{role.description,jdbcType=VARCHAR},
           department_id    = #{role.departmentIdentifier,jdbcType=VARCHAR}
        WHERE role_id = #{role.identifier,jdbcType=VARCHAR}
    </update>
    
    <!-- Insert all given parameters -->
    <insert id="insertObjects" parameterType="com.vvwork.ext.net.auth.RoleModel">

        INSERT INTO tb_vvwork_role (
            role_name,
            role_description,
            department_id,
            create_time
        )
        VALUES 
            <foreach collection="roles" item="role" separator=",">
               (#{role.name,jdbcType=VARCHAR},
                #{role.description,jdbcType=VARCHAR},
                #{role.departmentIdentifier,jdbcType=VARCHAR},
                #{role.time,jdbcType=TIMESTAMP})
            </foreach>
    </insert>
    
    <insert id="insert" parameterType="com.vvwork.ext.net.auth.RoleModel">

        INSERT INTO tb_vvwork_role (
            role_name,
            role_description,
            department_id,
            create_time
        )
        VALUES 
               (#{role.name,jdbcType=VARCHAR},
                #{role.description,jdbcType=VARCHAR},
                #{role.departmentIdentifier,jdbcType=VARCHAR},
                #{role.time,jdbcType=TIMESTAMP})
    </insert>
    
    <delete id="removeByIdentifiers">
        DELETE FROM tb_vvwork_role 
        WHERE 
        role_id IN
            <foreach collection="identifiers" item="identifier"
                     open="(" separator="," close=")">
                #{identifier,jdbcType=VARCHAR}
            </foreach>
    </delete>
    <delete id="removeByIdentifier">
        DELETE FROM tb_vvwork_role 
        WHERE 
        role_id = #{identifier,jdbcType=VARCHAR}
    </delete>
    
    <delete id="removeAll">
        DELETE FROM tb_vvwork_role
    </delete>
    
</mapper>